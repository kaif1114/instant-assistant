generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  email             String       @unique
  firstName         String
  lastName          String
  emailVerification String
  imageUrl          String?
  assistantsCreated Int          @default(0)
  userId            String       @unique
  currentPlan       Int          @default(1)
  PricingPlans      PricingPlans @relation(fields: [currentPlan], references: [id])
  Assistants        Assistants[]
}

model PricingPlans {
  id              Int    @id @default(autoincrement())
  name            String
  description     String
  price           String
  charactersLimit Int
  assistantsLimit Int
  User            User[]
}

// model PlanDetails {
//   id                Int          @id @default(autoincrement())
//   assistantsCreated Int
//   charactersUsed    Int
//   userId            String       @unique
//   planId            Int          @unique
//   plan              PricingPlans @relation(fields: [planId], references: [id])
//   user              User         @relation(fields: [userId], references: [userId])
// }

model Assistants {
  id              Int               @id @default(autoincrement())
  assistantId     String            @unique
  name            String
  description     String
  Type            String            @default("support")
  Status          String            @default("active")
  userId          String
  functionality   String
  primaryColor    String            @default("#478ACD")
  secondaryColor  String            @default("#f2f2f2")
  avatarUrl       String
  charactersUsed  Int               @default(0)
  startingMessage String            @default("Hello! How may I help you?")
  user            User              @relation(fields: [userId], references: [userId])
  session_details session_details[]
  knowledgeSource KnowledgeSource[]
}

model KnowledgeSource {
  id          Int        @id @default(autoincrement())
  assistantId String
  assistant   Assistants @relation(fields: [assistantId], references: [assistantId])
  source      String
  type        String
}

model langchain_chat_histories {
  id              Int             @id @default(autoincrement())
  session_id      String          @db.VarChar(255)
  message         Json
  session_details session_details @relation(fields: [session_id], references: [session_id])
}

model session_details {
  id          Int                        @id @default(autoincrement())
  userName    String
  userEmail   String
  session_id  String                     @unique
  assistantId String
  assistant   Assistants                 @relation(fields: [assistantId], references: [assistantId])
  messages    langchain_chat_histories[]
}
